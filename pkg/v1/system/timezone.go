package system

import (
	"os"
	"path/filepath"
	"strings"

	"github.com/vanilla-os/sdk/pkg/v1/system/types"
)

// GetSupportedTimezones returns a list of supported timezones.
// The list is generated by reading the contents of /usr/share/zoneinfo.
//
// Example:
//
//	timezones, err := system.GetSupportedTimezones()
//	if err != nil {
//		fmt.Printf("Error: %v\n", err)
//		return
//	}
//	for _, timezone := range timezones {
//		fmt.Printf("%s\n", timezone.Name)
//		fmt.Printf("%s\n", timezone.Location)
//	}
func GetSupportedTimezones() ([]types.Timezone, error) {
	const zoneinfoPath = "/usr/share/zoneinfo"

	files, err := os.ReadDir(zoneinfoPath)
	if err != nil {
		return nil, err
	}

	var supportedTimezones []types.Timezone

	for _, file := range files {
		timezonePath := filepath.Join(zoneinfoPath, file.Name())

		if file.IsDir() {
			subregionFiles, err := os.ReadDir(timezonePath)
			if err != nil {
				return nil, err
			}

			for _, subregionFile := range subregionFiles {
				subregion := strings.Join([]string{file.Name(), subregionFile.Name()}, "/")

				timezone := types.Timezone{
					Name:     subregion,
					Location: filepath.Join("/usr/share/zoneinfo", subregion),
				}

				supportedTimezones = append(supportedTimezones, timezone)
			}
		}
	}

	return supportedTimezones, nil
}
